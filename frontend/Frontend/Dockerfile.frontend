# Frontend/Dockerfile

# Use official Node.js image as the build environment
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package.json and package-lock.json (or yarn.lock) first for caching
COPY package*.json ./

# Install dependencies
RUN npm install --legacy-peer-deps

# Copy the rest of the frontend source code
COPY . .

# Build the Next.js app
RUN npm run build

# Production image, use a lightweight server to serve built files
FROM node:18-alpine AS runner

WORKDIR /app

ENV NODE_ENV production

# Copy only necessary files from build stage
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public

# Expose the port your app runs on (Next.js default 3000)
EXPOSE 3000

# Start the Next.js app in production mode
CMD ["npm", "start"]
